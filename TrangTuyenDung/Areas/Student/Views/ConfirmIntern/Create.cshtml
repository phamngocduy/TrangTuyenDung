@model TrangTuyenDung.Models.confirmation_intern
@{
    ViewBag.title = "Phiếu tiếp nhận thực tập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <!-- select2 -->
    <link href="~/Content/Vendor/select2/select2.min.css" rel="stylesheet" />
    <link href="~/Content/Vendor/select2/select2-bootstrap4.min.css" rel="stylesheet" />

    <!-- bootstrap datepicker3 -->
    <link href="~/Content/Vendor/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />

    <!-- autocomplete -->
    <link href="~/Content/Vendor/autocomplete/autocomplete.css" rel="stylesheet" />
}

<div class="container py-4">
    <h2 class="font-weight-medium mb-3 text-center text-uppercase text-primary">Phiếu tiếp nhận thực tập</h2>
    @if (ViewBag.Message == "success") {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <div>Phiếu tiếp nhận thực tập đã được gửi đi thành công.</div>

            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    else if (ViewBag.Message == "create") {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <div>Tạo phiếu tiếp nhận thực tập trước khi upload file.</div>

            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="text-danger">
        *Sinh viên điền đẩy đủ các trường thông tin dưới đây.
    </div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" })) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="h4 font-weight-medium text-primary">I. Thông tin sinh viên</div>
        <section class="mb-3">
            <!-- student_name -->
            <div class="form-group">
                @Html.LabelFor(model => model.student_name, "Họ và Tên", htmlAttributes: new { @class = "font-weight-medium" })
                @Html.EditorFor(model => model.student_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Họ và Tên" } })
                @Html.ValidationMessageFor(model => model.student_name, "", new { @class = "text-danger d-block" })
            </div>

            <!-- student_id/student_class -->
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.student_id, "MSSV", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.student_id, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mã số sinh viên" } })
                    @Html.ValidationMessageFor(model => model.student_id, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.student_class, "Lớp", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.student_class, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.student_class, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- major_id/faculty_id/level_id -->
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.major_id, "Khoa", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("major_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.major_id, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.faculty_id, "Ngành", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("faculty_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.faculty_id, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.level_id, "Bậc đào tạo", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("level_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.level_id, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- cellphone/student_email -->
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.cellphone, "Di động", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.cellphone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cellphone, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.student_email, "Email cá nhân", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.student_email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                    @Html.ValidationMessageFor(model => model.student_email, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- student_street/student_ward/student_district_id/student_province_id -->
            <div class="font-weight-medium text-secondary">Địa chỉ nhà:</div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.student_province_id, "Tỉnh/Thành Phố", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("student_province_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.student_province_id, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.student_district_id, "Quận", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("student_district_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.student_district_id, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.student_ward, "Phường xã", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.student_ward, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.student_ward, "", new { @class = "text-danger d-block" })
                </div>
            </div>
            <div class="form-group mb-1">
                @Html.LabelFor(model => model.student_street, "Số nhà và tên đường", htmlAttributes: new { @class = "font-weight-medium" })
                @Html.EditorFor(model => model.student_street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.student_street, "", new { @class = "text-danger d-block" })
            </div>


            <!-- type_intern/other_type_intern -->
            <div class="form-group">
                @Html.LabelFor(model => model.type_intern, "Loại hình thực tập", htmlAttributes: new { @class = "font-weight-medium" })
                @Html.DropDownList("type_intern", ViewBag.type_intern as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.type_intern, "", new { @class = "text-danger d-block" })
            </div>
            <div id="otherTypeIntern" class="form-group d-none">
                @Html.EditorFor(model => model.other_type_intern, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập loại thực tập (Khác)" } })
                @Html.ValidationMessageFor(model => model.other_type_intern, "", new { @class = "text-danger d-block" })
            </div>

            <!-- semester/school_year -->
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.semester, "Kỳ thực tập", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("semester", ViewBag.semester as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.semester, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.school_year, "Năm học", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.DropDownList("school_year", ViewBag.school_year as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.school_year, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- position/department -->
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.position, "Vị trí thực tập", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger d-block" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.department, "Phòng/ban", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.department, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.department, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- intern datetime start_day/end_day -->
            <div class="form-group mb-1">
                <label class="font-weight-medium">Thời gian thực tập</label>
                <div class="input-daterange input-group">
                    @Html.EditorFor(model => model.start_day, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @class = "form-control text-left", @placeholder = "Ngày bắt đầu thực tập", @autocomplete = "off" } })
                    <span class="input-group-text rounded-0 border-left-0 border-right-0">đến</span>
                    @Html.EditorFor(model => model.end_day, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @class = "form-control text-left", @placeholder = "Ngày kết thúc thực tập", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-text d-block mb-2">
                <small class="d-block">Khoảng thời thực tập (mm/dd/yyyy)</small>
                @Html.ValidationMessageFor(model => model.start_day, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.end_day, "", new { @class = "text-danger" })
            </div>

            <!-- schedule_work -->
            @Html.EditorFor(model => model.schedule_work, new { htmlAttributes = new { @type = "hidden" } })
            <div class="font-weight-medium mb-2">Lịch làm việc tại doanh nghiệp <small>(có thể chọn nhiều ngày)</small>:</div>
            <div class="pl-0 pl-md-4 row">
                <!-- start -->
                <div class="form-group col-md-4 d-flex">
                    <label class="col-auto col-form-label font-weight-medium">Thứ</label>
                    <select id="scheduleD1" class="col custom-select" multiple="">
                        <option value="0">Thứ hai</option>
                        <option value="1">Thứ ba</option>
                        <option value="2">Thứ tư</option>
                        <option value="3">Thứ năm</option>
                        <option value="4">Thứ sáu</option>
                        <option value="5">Thứ bảy</option>
                        <option value="6">Chủ nhật</option>
                    </select>
                </div>
                <div class="form-group col-md-4 d-flex">
                    <label class="col-auto col-form-label font-weight-medium">giờ bắt đầu</label>
                    <input type="time" id="scheduleS1" class="col form-control">
                </div>
                <div class="form-group col-md-4 d-flex">
                    <label class="col-auto col-form-label font-weight-medium">giờ kết thúc</label>
                    <input type="time" id="scheduleE1" class="form-control col">
                </div>

                <!-- end -->
                <div class="form-group col-md-4 d-flex">
                    <label class="col-auto col-form-label font-weight-medium">Thứ</label>
                    <select id="scheduleD2" class="col custom-select" multiple="">
                        <option value="2">Thứ hai</option>
                        <option value="3">Thứ ba</option>
                        <option value="4">Thứ tư</option>
                        <option value="5">Thứ năm</option>
                        <option value="6">Thứ sáu</option>
                        <option value="7">Thứ bảy</option>
                    </select>
                </div>
                <div class="form-group col-md-4 d-flex">
                    <label class="col-auto col-form-label font-weight-medium">giờ bắt đầu</label>
                    <input type="time" id="scheduleS2" class="col form-control">
                </div>
                <div class="form-group col-md-4 d-flex">
                    <label class="col-auto col-form-label font-weight-medium">giờ kết thúc</label>
                    <input type="time" id="scheduleE2" class="form-control col">
                </div>

                @Html.ValidationMessageFor(model => model.schedule_work, "", new { @class = "text-danger d-block" })
            </div>
        </section>

        <div class="h4 font-weight-medium text-primary">II. ĐƠN VỊ TIẾP NHẬN THỰC TẬP</div>
        <section>
            <div class="mb-2">
                <h5 class="text-primary">Thông tin đơn vị tiếp nhận thực tập</h5>

                <!-- organization_name/website -->
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.organization_name, "Tên đơn vị", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.organization_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.organization_name, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.website, "Website", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.website, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.website, "", new { @class = "text-danger d-block" })
                    </div>
                </div>

                <!-- tax/website -->
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.tax, "Mã số thuế", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.tax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tax, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.org_telephone, "Điện thoại", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.org_telephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.org_telephone, "", new { @class = "text-danger d-block" })
                    </div>
                </div>

                <!-- org_street/org_ward/org_district_id/org_province_id -->
                <div class="font-weight-medium text-secondary">Địa chỉ đơn vị:</div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.org_province_id, "Tỉnh/Thành Phố", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.DropDownList("org_province_id", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.org_province_id, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.org_district_id, "Quận", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.DropDownList("org_district_id", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.org_district_id, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.org_ward, "Phường xã", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.org_ward, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.org_ward, "", new { @class = "text-danger d-block" })
                    </div>
                </div>
                <div class="form-group mb-1">
                    @Html.LabelFor(model => model.org_street, "Số và tên đường", htmlAttributes: new { @class = "font-weight-medium" })
                    @Html.EditorFor(model => model.org_street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.org_street, "", new { @class = "text-danger d-block" })
                </div>

            </div>

            <div id="human-resource" class="mb-2">
                <h5 class="text-primary">Nhân sự tiếp nhận thực tập</h5>

                <!-- human_resource_name/human_resource_position/human_resource_position_tel -->
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.human_resource_name, "Họ và Tên", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.human_resource_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Họ và Tên" } })
                        @Html.ValidationMessageFor(model => model.human_resource_name, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.human_resource_position, "Chức vụ", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.human_resource_position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.human_resource_position, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.human_resource_position_tel, "Điện thoại", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.human_resource_position_tel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.human_resource_position_tel, "", new { @class = "text-danger d-block" })
                    </div>
                </div>

                <!-- human_resource_email/human_resource_cel -->
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.human_resource_email, "Email", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.human_resource_email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.human_resource_email, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.human_resource_cel, "Di động", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.human_resource_cel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.human_resource_cel, "", new { @class = "text-danger d-block" })
                    </div>
                </div>
            </div>

            <div id="supervisor">
                <h5 class="text-primary d-inline mr-2">Nhân sự hướng dẫn thực tập</h5>
                <!-- Same above -->
                <div class="custom-control custom-checkbox d-block d-md-inline">
                    <input type="checkbox" class="custom-control-input" id="sameAbove">
                    <label class="custom-control-label" for="sameAbove">Như trên</label>
                </div>
                <!-- supervisor_name/supervisor_position/supervisor_tel -->
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.supervisor_name, "Họ và Tên", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.supervisor_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Họ và Tên" } })
                        @Html.ValidationMessageFor(model => model.supervisor_name, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.supervisor_position, "Chức vụ", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.supervisor_position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.supervisor_position, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.supervisor_tel, "Điện thoại", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.supervisor_tel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.supervisor_tel, "", new { @class = "text-danger d-block" })
                    </div>
                </div>

                <!-- supervisor_email/supervisor_cellphone -->
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.supervisor_email, "Email", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.supervisor_email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.supervisor_email, "", new { @class = "text-danger d-block" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.supervisor_cellphone, "Di động", htmlAttributes: new { @class = "font-weight-medium" })
                        @Html.EditorFor(model => model.supervisor_cellphone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.supervisor_cellphone, "", new { @class = "text-danger d-block" })
                    </div>
                </div>


            </div>
        </section>

        <div class="d-flex justify-content-end">
            <input type="submit" value="Xem trước" class="btn btn-sm btn-outline-secondary mr-2" name="submit" />
            <input type="submit" value="Gửi" class="btn btn-sm btn-primary px-3" />
        </div>
    }
</div>

@section Scripts {
    <!-- bootstrap datepicker3 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js" integrity="sha256-bqVeqGdJ7h/lYPq6xrPv/YGzMEb6dNxlfiTUHSgRCp8=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.vi.min.js" integrity="sha256-TnMvef6AxT9fg6mNrTsZCgPDkU4g5EyB+tu66oLAI4U=" crossorigin="anonymous"></script>

    <!-- select2 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.12/js/select2.min.js" integrity="sha256-wfVTTtJ2oeqlexBsfa3MmUoB77wDNRPqT1Q1WA2MMn4=" crossorigin="anonymous"></script>

    <!-- devbridge autocomplete -->
    <script src="~/Scripts/Vendor/devbridge-autocomplete/jquery.autocomplete.min.js"></script>

    <!-- common func -->
    <script src="~/Scripts/common.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            const form = $("#myForm");
            const humanResourceFields = $("#human-resource").find("input.form-control");
            const supervisorFields = $("#supervisor").find("input.form-control");
            const sameAboveCheckbox = $("#sameAbove");

            // copy values before submit
            $(form).on("submit", () => {
                if (sameAboveCheckbox.is(":checked")) {
                    const copyValues = humanResourceFields.map(el => humanResourceFields[el].value);
                    supervisorFields.map(el => supervisorFields[el].value = copyValues[el]);
                }
            });

            initDatepickup($('.input-daterange'));
            searchSelect2($("#faculty_id"), "--Chọn Ngành--");
            searchSelect2($("#major_id"), "--Chọn Khoa--");
            searchSelect2($("#student_district_id"), "--Chọn Quận--");
            searchSelect2($("#student_province_id"), "--Chọn Tỉnh/TP--");
            searchSelect2($("#org_district_id"), "--Chọn Quận--");
            searchSelect2($("#org_province_id"), "--Chọn Tỉnh/TP--");
            //autocompleteCompanyName();
            fillSchedule();

            $('#scheduleD1, #scheduleD2').select2({ theme: 'bootstrap4' });

            $("#myForm").submit(function () {
                const schedule = [
                    {
                        day: $("#scheduleD1").val(),
                        start: $("#scheduleS1").val(),
                        end: $("#scheduleE1").val()
                    },
                    {
                        day: $("#scheduleD2").val(),
                        start: $("#scheduleS2").val(),
                        end: $("#scheduleE2").val()
                    }
                ];
                $('#schedule_work').val(JSON.stringify(schedule));
                $("#cellphone").val((_i, v) => v.replace(/\./g, ''));
                $("#human_resource_position_tel").val((_i, v) => v.replace(/\./g, ''));
                $("#org_telephone").val((_i, v) => v.replace(/\./g, ''));
            });

            $("#cellphone, #human_resource_position_tel, #org_telephone, #supervisor_tel, #supervisor_cellphone, #human_resource_cel").keyup(function () {
                this.value = formatPhoneNumber(this.value);
            });

            $('#type_intern').on('change', function () {
                const inpInternType = $("#otherTypeIntern");
                if (this.value == 2) {
                    inpInternType.removeClass("d-none");
                    inpInternType.val("");
                }
                else {
                    inpInternType.addClass("d-none");
                    inpInternType.val("");
                }
            });

            $("#student_province_id").change(function () {
                $("#student_district_id").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDistrictsByProvinceID", "Account",new { area="Company"})',
                    dataType: 'json',
                    data: { id: $("#student_province_id").val() },
                    success: function (districts) {
                        $.each(districts, function (_, district) {
                            $("#student_district_id").append('<option value="' + district.Value + '">' +
                                district.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        $("#student_district_id").append('<option value="" selected hidden>' + 'Không có dữ liệu tương ứng' + '</option>');
                    }
                });
                return false;
            });

            $("#org_province_id").change(function () {
                $("#org_district_id").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDistrictsByProvinceID", "Account",new { area="Company"})',
                    dataType: 'json',
                    data: { id: $("#org_province_id").val() },
                    success: function (districts) {
                        $.each(districts, function (_, district) {
                            $("#org_district_id").append('<option value="' + district.Value + '">' +
                                district.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        $("#org_district_id").append('<option value="" selected hidden>' + 'Không có dữ liệu tương ứng' + '</option>');
                    }
                });
                return false;
            });

            function fillSchedule() {
                const schD1 = $("#schedule_work").val().trim();
                if (!schD1) {
                    return false;
                }

                const parse = JSON.parse(schD1);
                const { day: d1, start: s1, end: e1 } = parse[0];
                const { day: d2, start: s2, end: e2 } = parse[1];

                $("#scheduleD1").val(d1).change();
                $("#scheduleD2").val(d2).change();

                $("#scheduleS1").val(s1);
                $("#scheduleS2").val(s2);

                $("#scheduleE1").val(e1);
                $("#scheduleE2").val(e2);
            }

            //function autocompleteCompanyName() {
            //    const listCompany = getAllCompanyName();
            //    $("#Company_Name").autocomplete({
            //        lookup: listCompany,
            //        showNoSuggestionNotice: true,
            //        noSuggestionNotice: "Bạn hãy nhập tên Công Ty vào đây nếu chưa có, lưu ý chữ hoa & chữ thường"
            //    });
            //}

            //function getAllCompanyName() {
            //    let $companies = $('#companies').data('companies').trim();
            //    $companies = $companies.slice("|", -1);
            //    $companies = $companies.split("|");
            //    $companies.sort((a, b) => a.localeCompare(b, "vi", { sensitivity: 'base' }));

            //    return $companies;
            //}

        });
    </script>
}
