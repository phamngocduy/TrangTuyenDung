@model TrangTuyenDung.Models.RecruitmentCreate

@{
    ViewBag.Title = "Đăng tin tuyển dụng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.itemActive = "recruitment";
}

@section Styles {
    <!-- select2 with bootstrap4 -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.12/css/select2.min.css" integrity="sha256-FdatTf20PQr/rWg+cAKfl6j4/IY3oohFAJ7gVC3M34E=" crossorigin="anonymous" />
    <link href="~/Content/Vendor/select2/select2-bootstrap4.min.css" rel="stylesheet" />

    <!-- bootstrap datepicker3 -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker3.min.css" integrity="sha256-FAOaXTpl90/K8cXmSdsskbQN3nKYulhCpPbcFzGTWKI=" crossorigin="anonymous" />
}

<!-- page heading -->
<div class="h3 mb-3 text-gray-800">Đăng tin tuyển dụng</div>

<!-- list all faculty/major -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Thông Tin Công Việc</h6>
    </div>

    <div class="card-body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" })) {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger d-block" })

            <!-- job title -->
            <div class="form-group row">
                <label for="title" class="col-sm-2 col-form-label font-weight-medium">Tiêu đề</label>
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tuyển nhân viên Marketing", @required = "" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- cpn name, date recruit, salary -->
            <div class="form-group row">
                <div class="col-sm-2 col-form-label font-weight-medium">Thông tin</div>
                <div class="col-sm-10">
                    <!-- cpn name -->
                    @Html.DropDownList("Company_Id", null, "", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Districts_id, "", new { @class = "text-danger d-block" })

                    <!-- location detail -->
                    <div class="form-row mt-3">
                        <div class="col-md-6">
                            @Html.DropDownList("Province_ID", ViewBag.province as List<SelectListItem>, new { @class = "form-control" })
                            <div class="text-muted small">Chọn Tỉnh/TP - Quận/Huyện địa điểm bạn muốn tuyển</div>
                        </div>

                        <div class="col-md-6">
                            @if (TempData["flag"] != null) {
                                @Html.DropDownList("Districts_id", ViewBag.Districts_id as List<SelectListItem>, new { @class = "form-control" })
                            }
                            else {
                                @Html.DropDownList("Districts_id", new SelectList(string.Empty, "Value", "Text"), "", htmlAttributes: new { @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(m => m.Districts_id, "", new { @class = "text-danger d-block" })
                        </div>
                    </div>

                    <!-- date recruit -->
                    <div class="input-daterange input-group mt-3">
                        @Html.EditorFor(model => model.Recruiting_dates, new { htmlAttributes = new { @class = "form-control text-left", @placeholder = "Ngày hết hạn", @autocomplete = "off" } })
                        <span class="input-group-text rounded-0 border-left-0 border-right-0">đến</span>
                        @Html.EditorFor(model => model.Expire_date, new { htmlAttributes = new { @class = "form-control text-left", @placeholder = "Ngày hết hạn", @autocomplete = "off" } })
                    </div>
                    <div class="form-text d-block">
                        @Html.ValidationMessageFor(model => model.Recruiting_dates, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Expire_date, "", new { @class = "text-danger" })
                        <small class="d-block">Khoảng thời gian tuyển dụng (mm/dd/yyyy)</small>
                    </div>

                    <!-- salary -->
                    <div class="input-group mt-3">
                        <input class="form-control" type="text" id="Salary_from" name="Salary_from" value="" placeholder="Mức lương thấp nhất" />
                        <span class="input-group-text rounded-0 border-left-0 border-right-0">đến</span>
                        <input class="form-control" type="text" id="Salary_to" name="Salary_to" value="" placeholder="Mức lương cao nhất" />
                    </div>
                    <div class="form-text d-block">
                        @Html.ValidationMessageFor(model => model.Salary_from, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Salary_to, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- faculty/job position/ job types -->
            <div class="form-group row">
                <div class="col-sm-2 col-form-label font-weight-medium">Vị trí tuyển dụng</div>

                <div class="col-sm-10">
                    <!-- faculty -->
                    <div>
                        @Html.ListBox("RecMajor", ViewBag.RecMajor as List<SelectListItem>, new { @class = "form-control", @multiple = "true" })
                        <div class="d-block small">
                            <div class="text-muted">Ngành đào tạo tại Văn Lang</div>
                            @Html.ValidationMessageFor(m => m.RecMajor, "", new { @class = "text-danger d-block" })
                        </div>
                    </div>

                    <!-- job positions -->
                    <div class="mt-3">
                        @Html.DropDownList("Job_Position_Id", null, "", htmlAttributes: new { @class = "form-control" })
                        <div class="d-block">
                            @Html.ValidationMessageFor(m => m.Job_Position_Id, "", new { @class = "text-danger  d-block" })
                        </div>
                    </div>

                    <!-- job_position_other -->
                    <div class="custom-control custom-checkbox mt-1">
                        <input type="checkbox" class="custom-control-input" id="job_position_other">
                        <label class="custom-control-label" for="job_position_other">Vị trí ứng tuyển khác</label >                    
                        @Html.EditorFor(model => model.other_job, new { htmlAttributes = new { @class = "form-control form-control-sm mb-2 d-none",@id= "job_position_other_input", @placeholder = "Nhập loại thực tập (Khác)" } })
                        @Html.ValidationMessageFor(model => model.other_job, "", new { @class = "text-danger d-block" })
                    </div>

                    <!-- job types -->
                    <div class="mt-3">
                        <!-- fulltime -->
                        <div class="custom-control custom-checkbox mt-3">
                            @Html.EditorFor(model => model.Is_Full_Time, new { htmlAttributes = new { @class = "custom-control-input" } })
                            <label class="custom-control-label" for="Is_Full_Time">Toàn thời gian (Fulltime)</label>
                            <input class="form-control form-control-sm mb-2 d-none" type="number" id="Num_FullTime" name="Num_FullTime" placeholder="Số lượng (nếu có)" min="0" />
                            @Html.ValidationMessageFor(model => model.Is_Full_Time, "", new { @class = "text-danger  d-block" })
                        </div>

                        <!-- partime -->
                        <div class="custom-control custom-checkbox">
                            @Html.EditorFor(model => model.Is_Part_Time, new { htmlAttributes = new { @class = "custom-control-input" } })
                            <label class="custom-control-label" for="Is_Part_Time">Bán thời gian (Parttime)</label>
                            <input class="form-control form-control-sm mb-2 d-none" type="number" id="Num_PartTime" name="Num_PartTime" placeholder="Số lượng (nếu có)" min="0" />
                            @Html.ValidationMessageFor(model => model.Is_Part_Time, "", new { @class = "text-danger d-block" })
                        </div>

                        <!-- intern -->
                        <div class="custom-control custom-checkbox">
                            @Html.EditorFor(model => model.Is_Intership, new { htmlAttributes = new { @class = "custom-control-input" } })
                            <label class="custom-control-label" for="Is_Intership">Thực tập sinh (Intern)</label>
                            <input class="form-control form-control-sm mb-2 d-none" type="number" id="Num_Intern" name="Num_Intern" placeholder="Số lượng (nếu có)" min="0" />
                            @Html.ValidationMessageFor(model => model.Is_Intership, "", new { @class = "text-danger d-block" })
                        </div>
                    </div>
                </div>
            </div>

            <!-- description -->
            <div class="form-group row">
                <div class="col-sm-2 col-form-label font-weight-medium">Mô tả công việc</div>

                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Mo_ta_Chi_Tiet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mo_ta_Chi_Tiet, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- required -->
            <div class="form-group row">
                <label class="col-sm-2 col-form-label font-weight-medium">Yêu cầu công việc</label>

                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Yeu_Cau_Cong_Viec, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Yeu_Cau_Cong_Viec, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- skills -->
            <div class="form-group row">
                <label class="col-sm-2 col-form-label font-weight-medium">Kĩ năng yêu cầu</label>

                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Ky_Nang_Cong_Viec, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ky_Nang_Cong_Viec, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- benefits -->
            <div class="form-group row">
                <label class="col-sm-2 col-form-label font-weight-medium">Phúc lợi</label>

                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Phuc_Loi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phuc_Loi, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <!-- location detail -->
            <div class="form-group row">
                <label class="col-sm-2 col-form-label"><span class="font-weight-medium">Địa chỉ làm việc </span><small>(chi tiết)</small></label>

                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Tuy_Chon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tuy_Chon, "", new { @class = "text-danger d-block" })
                </div>
            </div>

            <div class="d-flex justify-content-end">
                <input type="submit" value="Đăng tin" class="btn btn-sm btn-primary mr-2" name="submit" />
                <input type="submit" value="Xem trước" class="btn btn-sm btn-outline-secondary" name="submit" />
            </div>
        }
    </div>
</div>

@section Scripts{
    <!-- bootstrap datepicker3 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js" integrity="sha256-bqVeqGdJ7h/lYPq6xrPv/YGzMEb6dNxlfiTUHSgRCp8=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.vi.min.js" integrity="sha256-TnMvef6AxT9fg6mNrTsZCgPDkU4g5EyB+tu66oLAI4U=" crossorigin="anonymous"></script>

    <!-- select2 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.12/js/select2.min.js" integrity="sha256-wfVTTtJ2oeqlexBsfa3MmUoB77wDNRPqT1Q1WA2MMn4=" crossorigin="anonymous"></script>

    <!-- tinyMCE -->
    <script src="~/Scripts/Vendor/tinymce/tinymce.min.js"></script>

    <!-- common func -->
    <script src="~/Scripts/common.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            initDatepickup($('.input-daterange'), { startDate: new Date() });
            initTinymce();

            showInputField($("#Is_Full_Time"), $("#Num_FullTime"));
            showInputField($("#Is_Part_Time"), $("#Num_PartTime"));
            showInputField($("#Is_Intership"), $("#Num_Intern"));
            showInputField($("#job_position_other"), $("#job_position_other_input"));

            searchSelect2($("#Province_ID"), "--Chọn Tỉnh/TP--");
            searchSelect2($("#Districts_id"), "--Chọn Quận/Huyện--");
            searchSelect2($("#Company_Id"), "--Chọn công ty--");
            searchSelect2($("#RecMajor"), "--Chọn chuyên Ngành--");
            searchSelect2($("#Job_Position_Id"), "--Chọn vị trí ứng tuyển--");


            $("#myForm").submit(function () {
                $("#Salary_to").val((_i, v) => v.replace(/\./g, ''));
                $("#Salary_from").val((_i, v) => v.replace(/\./g, ''));
            });

            $("#Province_ID").change(function () {
                $("#Districts_id").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDistrictsByProvinceID", "Account",new { area="Company"})',
                    dataType: 'json',
                    data: { id: $("#Province_ID").val() },
                    success: function (districts) {
                        $.each(districts, function (_, district) {
                            $("#Districts_id").append('<option value="' + district.Value + '">' +
                                district.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        $("#Districts_id").append('<option value="" selected hidden>' + 'Không có dữ liệu tương ứng' + '</option>');
                    }
                });
                return false;
            });

            $("#Job_Position_Id").change(function () {
                const selectFaculty = $("#RecMajor");
                $.ajax({
                    type: 'post',
                    url: '@Url.Action("GetMajorByPosition", "Recruitment", new { area="" })',
                    dataType: 'json',
                    data: { id: $(this).val() },
                    success: function (major) {
                        selectFaculty.val(major.id);
                        selectFaculty.trigger('change');
                    },
                    error: function (ex) {
                        console.log(ex);
                    }
                });
                return false;
            });

            $("#Salary_from").keyup(function () {
                this.value = formatCurrency(this.value);
            });
            $("#Salary_to").keyup(function () {
                this.value = formatCurrency(this.value);
            });

            function showInputField(elCheck, elFieldShow) {
                return elCheck.click(function () {
                    if ($(this).is(":checked")) {
                        $(elFieldShow).removeClass('d-none');
                    }
                    else {
                        $(elFieldShow).addClass('d-none');
                    }
                });
            }
        });
    </script>
}
