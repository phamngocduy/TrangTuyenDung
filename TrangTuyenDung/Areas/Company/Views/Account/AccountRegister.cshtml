@model TrangTuyenDung.Areas.Company.Models.CompanyRefRegisterViewModel
@{
    ViewBag.Title = "Hoàn thành Đăng kí";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

@section Styles {
    <!-- select2 -->
    <link href="~/Content/Vendor/select2/select2.min.css" rel="stylesheet" />
    <link href="~/Content/Vendor/select2/select2-bootstrap4.min.css" rel="stylesheet" />

    <link href="~/Content/auth.css" rel="stylesheet" />
}

<div class="auth_page d-flex">
    <div class="auth_sidebar p-5 bg-light d-none d-lg-block">
        <a href="@Url.Action("IndexCallBack", "Home", new { area=""})">
            <img class="logo img-fluid" src="~/Assets/img/vlu-logo-foot.png" alt="Ejob Văn Lang Đại Học" />
        </a>
        <h1 class="d-inline">Chào mừng bạn đến với EJob.</h1>
    </div>

    <main class="justify-content-lg-center align-items-lg-center px-3 py-2">
        <div class="auth_content w-100">
            <div class="mb-4">
                <a class="d-block d-lg-none my-3" href="@Url.Action("IndexCallBack", "Home", new { area=""})">
                    <img class="img-fluid" src="~/Assets/img/vlu-logo-blue.png" alt="Ejob Văn Lang Đại Học" style="height: 4rem;" />
                </a>

                <h2 class="font-weight-bold text-dark mb-3">Hoàn thành đăng kí</h2>
            </div>

            @using (Html.BeginForm("AccountRegister", "Account", new { area = "Company", @_ref = Model._ref }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" })) {
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    <!-- fullname, email -->
                    <div class="mt-4 mb-2">
                        <div class="h4">Thông tin đăng nhập</div>
                        <div>
                            <span>Nhân viên Công Ty: <span class="font-weight-medium">@ViewBag.ComName</span></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-12">
                            <label class="font-weight-medium d-block" for="FullName">Họ và tên</label>
                            @Html.TextBoxFor(m => m.FullName, "", new { @class = "form-control", @required = "" })
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger small font-weight-medium" })
                        </div>
                        <div class="form-group col-12">
                            <label class="font-weight-medium d-block" for="Email">Email</label>
                            @Html.TextBoxFor(m => m.Email, "", new { @class = "form-control", @type = "email", @required = "" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger small font-weight-medium" })
                        </div>
                    </div>

                    <!-- password, repassword -->
                    <div class="form-group">
                        <label class="font-weight-medium d-block" for="Password">Mật khẩu</label>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @required = "" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger small font-weight-medium" })
                    </div>
                    <div class="form-group">
                        <label class="font-weight-medium d-block" for="ConfirmPassword">Nhập lại mật khẩu</label>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "6+ kí tự", @required = "" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger small font-weight-medium" })
                    </div>
                </div>
                <a href="@Url.Action("Index", "Home", new { area="" })">
                    <input type="button" class="btn btn-outline-secondary" value="Hủy" />
                </a>
                <button type="submit" class="btn btn-primary font-weight-medium w-50 mr-2">Đăng Ký</button>
            }
        </div>
    </main>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            checkRePassword();
            checkValidEmail();

            const pw = $('input#Password');
            const rePw = $('input#ConfirmPassword');
            const rePwErrMsg = rePw.next();

            if ('@ViewBag.Message' == "RegisterSuccess") {
                showModalRegisterSuccess();
                setTimeout(() => window.location.replace("/"), 2000);
            }

            function checkRePassword() {
                $('#Password, #ConfirmPassword').on('keyup', function () {
                    if (pw.val().trim() !== rePw.val().trim()) {
                        rePwErrMsg.text('Sai mật khẩu');
                    }
                    else {
                        rePwErrMsg.text('');
                    }
                });
            }

            function checkValidEmail() {
                const emailInput = $('input#Email');
                const errorEmailMsg = emailInput.next();
                $(emailInput).on("change", function (event) {
                    const emailPattern = /^(([^<>()[\]\\.,;:\s@@"]+(\.[^<>()[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                    const email = event.target.value;
                    if (!emailPattern.test(email)) {
                        errorEmailMsg.html('Email không đúng định dạng.');
                    }
                    else {
                        errorEmailMsg.html('');
                        const classList = "small font-weight-medium ";
                        $.ajax({
                            url: '@Url.Action("checkEmailAlreadyExist", "Account", new { area = "Company"})',
                            type: 'post',
                            data: { email },
                            success: function (data) {
                                if (data == "true") {
                                    errorEmailMsg.attr('class', `${classList} text-success`);
                                    errorEmailMsg.text("Bạn có thể sử dụng email này!");

                                } else if (data == "false") {
                                    errorEmailMsg.attr('class', `${classList} text-danger`);
                                    errorEmailMsg.text("Email đã được sử dụng, vui lòng chọn Email khác!");
                                } else if (data == "empty") {
                                    errorEmailMsg.attr('class', `${classList} text-danger`);
                                    errorEmailMsg.text("Vui lòng nhập Email!");
                                } else if (data == "invalid") {
                                    errorEmailMsg.attr('class', `${classList} text-danger`);
                                    errorEmailMsg.text("Email không đúng định dạng!");
                                }
                            },
                            error: function () {
                                alert("Đã có lỗi xảy ra! Vui lòng làm mới lại trang và thử lại!");
                            }
                        });
                    }
                })
            }

            function showModalRegisterSuccess() {
                const notiModal = $('#notify_modal');
                const modalTit = notiModal.find('#notify_modal_label');
                const bodyContent = notiModal.find('.modal-body');

                modalTit.text('Đăng kí thành công');
                bodyContent.html("<div class='text-center'><div class='h4 font-weight-medium text-success'>Chúc mừng</div><p>Tài khoản của bạn đã hoàn thành đăng kí</p></div>");
                notiModal.modal('show');
            }
        });
    </script>
}

