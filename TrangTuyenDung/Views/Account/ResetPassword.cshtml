@model TrangTuyenDung.Models.ResetPasswordViewModel
@{
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    ViewBag.Title = "Đổi mật khẩu";
}

@section Styles {
    <link href="~/Content/auth.css" rel="stylesheet" />
}

<div class="auth_page d-flex">
    <div class="auth_sidebar p-5 bg-light d-none d-lg-block">
        <a href="@Url.Action("IndexCallBack", "Home", new { area="" })">
            <img class="logo img-fluid" src="~/Assets/img/vlu-logo-foot.png" alt="Ejob Văn Lang Đại Học" />
        </a>
        <h1 class="d-inline">Chào mừng bạn đến với EJob.</h1>
    </div>

    <main class="justify-content-lg-center align-items-lg-center px-3 py-2">
        <div class="auth_content w-100">
            <div class="mb-4">
                <a class="d-block d-lg-none my-3" href="@Url.Action("IndexCallBack", "Home", new { area=""})">
                    <img class="img-fluid" src="~/Assets/img/vlu-logo-blue.png" alt="Ejob Văn Lang Đại Học" style="height: 4rem;" />
                </a>
                <h2 class="font-weight-bold mb-3 text-dark">Bạn quên mật khẩu?</h2>
                @{
                    var err = TempData["Err"];
                    if (err != null) {
                        <div class="h5 text-danger font-weight-normal">
                            Email không tồn tại
                        </div>
                    }
                }
                @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form" })) {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Code)
                    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@

                    var formMsg = "";
                    var emailInvalid = "";
                    var passwordInvalid = "";
                    var confirmpasswordInvalid = "";
                    if (!ViewData.ModelState.IsValid) {
                        foreach (var modelStateKey in ViewData.ModelState.Keys) {
                            var modelStateVal = ViewData.ModelState[modelStateKey];
                            foreach (var error in modelStateVal.Errors) {
                                if (modelStateKey == "Email") {
                                    emailInvalid = "is-invalid";
                                }
                                if (modelStateKey == "Password") {
                                    passwordInvalid = "is-invalid";
                                }
                                if (modelStateKey == "ConfirmPassword") {
                                    confirmpasswordInvalid = "is-invalid";
                                }
                                if (String.IsNullOrWhiteSpace(modelStateKey)) {
                                    formMsg = error.ErrorMessage;
                                }
                            }
                        }
                    }

                    <div class="form-group">
                        <label class="font-weight-medium d-block" for="Email">Email</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control " + emailInvalid, @required = "" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="form-group">
                        <label class="font-weight-medium d-block" for="Password">Mật khẩu</label>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control " + passwordInvalid, @required = "" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "invalid-feedback" })
                    </div>

                    <div class="form-group">
                        <label class="font-weight-medium d-block" for="ConfirmPassword">Xác nhận mật khẩu</label>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control " + confirmpasswordInvalid, @required = "" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "invalid-feedback" })
                    </div>

                    <button type="submit" class="btn btn-primary w-50 font-weight-medium">Đổi mật khẩu</button>
                }
            </div>

            <div class="text-muted small my-3">
                <a href="@Url.Action("IndexCallBack", "Home", new { area=""})">Trang chủ</a>
                &nbsp;·&nbsp;
                <a href="@Url.Action("Login", "Account", new { area = "" })">Đăng nhập</a>
            </div>
        </div>
    </main>
</div>
